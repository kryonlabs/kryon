## Calculator Application
##
## A simple calculator with basic arithmetic operations
## Run with: kryon run main.kry

import kryon
import kryon.integration.raylib_backend

# Calculator state
var display = "0"
var previousValue = 0.0
var currentOperation = ""
var waitingForOperand = true

proc calculate() =
  if currentOperation != "":
    let current = parseFloat(display)
    case currentOperation:
    of "+":
      display = $ (previousValue + current)
    of "-":
      display = $ (previousValue - current)
    of "*":
      display = $ (previousValue * current)
    of "/":
      if current != 0:
        display = $ (previousValue / current)
      else:
        display = "Error"
    else:
      discard

    previousValue = parseFloat(display)
    currentOperation = ""
    waitingForOperand = true

window("Calculator", 300, 400):
  container:
    # Display
    text(display, fontSize = 32, textAlign = "right", width = 280, height = 60):
      backgroundColor = "#f0f0f0"

    # Number buttons
    for row in ["789", "456", "123", "0."]:
      container:
        for digit in row:
          button(digit, width = 60, height = 50):
            onClick:
              if waitingForOperand:
                display = digit
                waitingForOperand = false
              else:
                if display == "0":
                  display = digit
                else:
                  display &= digit

    # Operation buttons
    container:
      button("+", width = 60, height = 50, backgroundColor = "#ffa500"):
        onClick:
          previousValue = parseFloat(display)
          currentOperation = "+"
          waitingForOperand = true

      button("-", width = 60, height = 50, backgroundColor = "#ffa500"):
        onClick:
          previousValue = parseFloat(display)
          currentOperation = "-"
          waitingForOperand = true

      button("*", width = 60, height = 50, backgroundColor = "#ffa500"):
        onClick:
          previousValue = parseFloat(display)
          currentOperation = "*"
          waitingForOperand = true

      button("/", width = 60, height = 50, backgroundColor = "#ffa500"):
        onClick:
          previousValue = parseFloat(display)
          currentOperation = "/"
          waitingForOperand = true

    # Equals and Clear buttons
    container:
      button("=", width = 140, height = 50, backgroundColor = "#00ff00"):
        onClick:
          calculate()

      button("C", width = 140, height = 50, backgroundColor = "#ff0000", textColor = "white"):
        onClick:
          display = "0"
          currentOperation = ""
          waitingForOperand = true